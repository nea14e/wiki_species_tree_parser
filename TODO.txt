+ составить таблицу рангов с упорядочиванием
+ переписать get_tree(), чтоб дочерние с разными рангами были на разных уровнях.
TODO ? хотелось бы, чтобы если у элемента есть дочерние разных уровней, то на всех уровнях дочерних, кроме последнего, делались бы отступы.
+ показывать имена нужного языка, передавать язык в хранимку. Если имя NULL - то брать title на латыни
+ упорядочивать на каждом уровне по имени
+ добавить колонку и шаг в парсере для числа видов
+ сделать хранимку для поиска по имени - по началу имени, регистронезависимо
+ навесить индекс по get_tree()
+ get_tree() - добавлен флаг "Этот уровень содержит элемент, выбранный пользователем". Чтобы потом отчёркивать этот уровень линиями пожирнее.
- TODO !!! переделка, чтобы побыстрее распарсить русский и английский и выйти в продакшен:
основной парсер берёт Викивиды и википедии только русского и английского. При этом ссылки на википедии всех языков сохраняются, но он не тратит время на переход по ним.
далее сделать отдельный вид до-парсинга википедий для заданного языка (или просто всех остальных языков - так проще и не запутаемся). При этом используются уже хранящиеся в базе ссылки на них.
- на фронте сделать роутинг с указанием Id последнего кликнутого элемента в URL
+ для уменьшения нагрузки вынес в отдельную хранимку get_childes_by_id() подгрузку только вложенной в выбранный элемент части дерева.
- поиску по названию сделать минимум 3 символа для запроса и debounce. Продублировать условие и на бэке, чтобы не было DDOS.
- наверняка будет проблема с приведением картинок к нужному размеру
-? могут быть проблемы с тормозами и памятью в браузерах клиентов. Подумать - может, загружать на каждом уровне только первые 5-10 записей и сделать догрузку при прокрутке.
- Закладки на любимых животных и список для быстрого доступа к ним (через куки, никакого хранения в БД и никакой авторизации на сайте)