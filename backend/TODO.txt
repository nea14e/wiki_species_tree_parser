+ составить таблицу рангов с упорядочиванием
+ переписать get_tree(), чтоб дочерние с разными рангами были на разных уровнях.
+ показывать имена нужного языка, передавать язык в хранимку. Если имя NULL - то брать title на латыни
+ упорядочивать на каждом уровне по имени
+ добавить колонку и шаг в парсере для числа видов
+ сделать хранимку для поиска по имени - по началу имени, регистронезависимо
+ навесить индекс по get_tree()
+ get_tree() - добавлен флаг "Этот уровень содержит элемент, выбранный пользователем". Чтобы потом отчёркивать этот уровень линиями пожирнее.
+ переделка, чтобы побыстрее распарсить русский и английский и выйти в продакшен:
основной парсер берёт Викивиды и википедии только русского и английского. При этом ссылки на википедии всех языков сохраняются, но он не тратит время на переход по ним.
далее сделать отдельный вид до-парсинга википедий для заданного языка (или просто всех остальных языков - так проще и не запутаемся). При этом используются уже хранящиеся в базе ссылки на них.
+ на фронте сделать роутинг с указанием Id последнего кликнутого элемента в URL
+ для уменьшения нагрузки вынес в отдельную хранимку get_childes_by_id() подгрузку только вложенной в выбранный элемент части дерева.
+ поиску по названию сделаны LIMIT/OFFSET
+ поиску по названию сделать минимум 3 символа для запроса и debounce. (Условие "минимум 3 символа" уже продублировано на бэке).
+ синим выделять выбранный элемент дерева и отсечки его уровня, а просто раскрытые элементы сделать темнее, как сейчас выбранный
+ заголовок вкладки браузера (тоже подгружать языки, а по дефолту English написать)
- [Artem] иконка вкладки браузера (погуглить про Angular 2) (картинку придумать самостоятельно, брать только из Вики или нарисовать, размер очевидно не больше 32x32 пиксела)
+ решена проблема с приведением картинок к нужному размеру
-? могут быть проблемы с тормозами и памятью в браузерах клиентов. Подумать - может, загружать на каждом уровне только первые 5-10 записей и сделать догрузку при горизонтальной прокрутке.
- [Artem] Закладки на любимых животных и список для быстрого доступа к ним (через куки с разрешения пользователя, никакого хранения в БД и никакой авторизации на сайте)
  + загрузка списка
  + куки
  + отдельный компонент
  + поправить стиль списка
  + переход в дерево по нажатию (см. аналогичные переходы при нажатии на элемент дерева, там вроде бы navigate())
  + в дереве на избранном элементе прямо сильно выделять цветом кнопку
  + и делать другую картинку (см. [ngClass]="..." в гугле или Ctrl + Shift + F по проекту)
  + удалять элементы по кнопкам из дерева (та же кнопка на добавление) и из избранного (добавить кнопки справа на каждый элемент)
  + подсвечивать кнопку открытия избранного, когда оно уже открыто
  + добавить заглушку если содержимого нет (захардкодить текст в html)
     - вынести текст в перевод
- Отображать название элемента и его ранг перед текстом интересного факта
  - Бэк?
  - [Artem] Фронт
- [Artem] Показывать цветом кнопки или рамки, какая вкладка выделена.
  - Технически:
    - Подписаться на события изменения activeRoute в корневом компоненте (гугли и см. код), доставать строку с URL, разбить на список по '/' и запомнить в this.... последний сегмент с индексом [-1].
    - Далее на кнопках сравнивать эту текстовую переменную с текстовыми константами, для каждой кнопки написать свою.
    - Стиль менять через [ngClass]="... ? '' : ''"
  - [Упражнение по коду] Хорошо бы после исправления всё ещё раз переделать через enum (вроде можно строки в нём хранить). Для него создать отдельный файлик рядом с корневым компонентом.
+ Кнопки "Назад/Вперёд", фрагменты сохраняют своё состояние при переключение по всем обычным кнопкам, кнопка К корню дерева вынесена в само дерево и везде заменена на "К дереву"
+ Сделать загрузку советов по id из адреса (поправить фронт, бек, хранимку) для возможности открыть именно этот совет по ссылке для шаринга ссылок.
- [перепроверить] Баг: к старому поиску нельзя вернуться, он не запоминается в истории, чтобы не было спама при наборе пользователем запроса в поиске. Поставить debounce().
- [Artem] Переход к Википедии возможен даже при отсутствии перевода, тогда ищется NULL.
  - Заблокировать кнопку (в т.ч. визуально)
  - Проверить аналогичное для поиска в Google.
- поиск по названию:
  - перевод для заглушки
  - [Artem] Если в поиске ничего не нашлось, заглушка не отображается. Непонятно, закончился ли поиск. Сделать заглушку с текстом/картинкой вместо списка. Можно добавить в папку assets новую картинку из сайтов бутстрапа или материал дизайн
  - [Evgeniy] высылать со списком булево значение, есть ли ещё хоть один элемент, не вместившийся в высылаемые 10 (не считать все в базе, т.к. это долго)
  - [Artem] после пункта 2 сделать в конце списка по центру большую кнопку догрузки по 10 элементов (переменная offset означает отступ, сколько элементов уже загружено в список) и дисейблить/убирать её по пришедшему булеву.
- [Эм, как я это написал? так и надо, разве нет?] Баг: поиск по названию не чувствует регистр. По крайней мере, при латыни, а может и всегда.
+ Сделать шаринг ссылок:
  + у советов
  + у элементов дерева
+ У дерева сделать радиокнопки - смотреть все названия только на латыни или на обоих языках
- [БОЛЬШАЯ] Интерфейс админа для редактирования переводов
  + Добавление, редактирование фактов
  - Редактирование переводов фактов
    + Собственно переводы
      + просмотр перевода на язык без прав, подсказки, курсор
    ? Параллельное пользование
    - Подсветка недавно отредактированных переводов фактов, каждый пользователь - своим цветом (хеш) и кнопка "Сбросить подсветку"
    - Добавление животного к факту и удаление оттуда (переиспользовать компонент поиска, сделать ему входные/выходные переменные)
  ? Генерация SQL Fill-скрипта для фактов
- [БОЛЬШАЯ] Добавление, редактирование самого языка
  + Триггеры уже вроде есть в БД
  - На этой же странице - редактирование переводов интерфейса на язык (аналогично фактам)
    - Новая страница
    - Просмотр списка языков
    - Добавление, удаление
    - Переводы интерфейса (аналогично фактам)
    ? Подсветка недавно изменённых
- [БОЛЬШАЯ] Наглядное представление прогресса в линейном списке видов (с возможностью "зума")
- [БОЛЬШАЯ] Выбор языка в интерфейсе пользователя, его принудительное задание через параметр URL запроса на бэк вместо заголовков запроса. Сохранение языка в куки по запросу пользователя.
  - поиску по названию проверить русский и латынь, пока не начали переделывать на выбор обоих языков
  - Похожий элемент интерфейса уже есть в админке, страница пользователи, редактирование прав
  - [БОЛЬШАЯ] В том числе выбор второго языка (а не только всегда латынь)
+ Страница управления админ-пользователями
+ Интерфейс админа для отслеживания прогресса парсинга
  + и для самого парсинга
  + автообновление страницы
  + логи, логи ошибок
    + баг: логи не обновляются, пока задача не остановлена. Зависает на строках proc.stdout.read().
+ добавил в БД колонку для ошибок (для 2 этапа и для parse_language)
- Об авторах (наполнение текстом)
? Кнопки "Вперёд/Назад" задисейблить, когда не надо (не удалось сделать, повозившись почти целый час)